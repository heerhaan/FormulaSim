@model FormuleCirkelEntity.ViewModels.HomeTeamStandingsModel

@{
    ViewData["Title"] = "Standings";
    int increment = 1;
}

<div class="d-inline-block">
    <div id="graphic">
        <h1 class="text-left">World Constructors Championship - @Model.Year</h1>

        <table class="ctable standings-border fullborder">
            <thead>
                <tr>
                    <th class="fullborder">
                        POS
                    </th>
                    <th class="fullborder">
                        Principal
                    </th>
                    <th class="fullborder">
                        Team
                    </th>
                    <th class="fullborder">
                        Pts
                    </th>
                    @foreach (var track in Model.Tracks)
                    {
                        <th class="fullborder">@(track.Location.Substring(0, 3).ToUpper())
                            <br /><span class="flag flag-@(track.Country) ff-sm"></span></th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.SeasonTeams)
                {
                    <tr>
                        <td rowspan="@(item.SeasonDrivers.Count + 1)">
                            <b>@(increment++)</b>
                        </td>
                        <td class="text-left pr-2" rowspan="@(item.SeasonDrivers.Count + 1)">
                            <span class="ml-cel">@Html.DisplayFor(modelItem => item.Principal)</span>
                        </td>
                        <td rowspan="@(item.SeasonDrivers.Count + 1)" style="background-color:@(item.Colour);color:@(item.Accent);" class="text-left">
                            <span class="pl-1 pr-1"><span class="flag flag-@(item.Team.Country) ff-sm flag-margin"></span>
                            @item.Name</span>
                        </td>
                        <td rowspan="@(item.SeasonDrivers.Count + 1)">
                            <b>@Html.DisplayFor(modelItem => item.Points)</b>
                        </td>
                        @foreach (var driver in item.SeasonDrivers)
                        {
                        <tr>
                            @foreach (var round in Model.Rounds)
                            {
                                DriverResult result = Model.DriverResults
                                    .FirstOrDefault(r => r.SeasonDriverId == driver.SeasonDriverId && r.RaceId == round);
                                if (result == null || result.Position == 0)
                                {
                                    <td>-</td>
                                }
                                else
                                {
                                    if (result.Status == Status.DNF)
                                    {
                                        <td class="result-dnf">DNF</td>
                                    }
                                    else if (result.Status == Status.DSQ)
                                    {
                                        <td class="badge-dsq">DSQ</td>
                                    }
                                    else if (result.Position == 1)
                                    {
                                        <td class="badge-first">@result.Position</td>
                                    }
                                    else if (result.Position == 2)
                                    {
                                        <td class="badge-second">@result.Position</td>
                                    }
                                    else if (result.Position == 3)
                                    {
                                        <td class="badge-third">@result.Position</td>
                                    }
                                    else if (result.Position <= Model.LastPointPos)
                                    {
                                        <td class="result-points">@result.Position</td>
                                    }
                                    else
                                    {
                                        <td class="result-none">@result.Position</td>
                                    }
                                }
                            }
                        </tr>
                        }
                    </tr>
                    }
            </tbody>
        </table>
    </div>

    <div class="flex-row justify-content-between">
        <button class="btn" onclick="takeScreenshot('#graphic', '#screenshot')"><i class="fas fa-image fa-2x"></i></button>
    </div>

    <div id="screenshot"></div>
</div>
