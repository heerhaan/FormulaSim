@model SeasonDetailModel

@{
    ViewData["Title"] = "Season detail";
    bool isAdmin = this.User.IsInRole(Constants.RoleAdmin);
}

<div class="d-inline-block w-75">
    <h1>Season: @Model.Season.SeasonNumber</h1>

    <div class="flex-row justify-content-between mb-2">
    @if (Model.Season.State == SeasonState.Draft)
    {
        <div class="btn-group">
        @if (isAdmin)
        {
            <a asp-action="Start" asp-route-seasonId="@Model.Season.SeasonId" class="btn">Start season!</a>
            <a asp-controller="Races" asp-action="AddTracks" asp-route-id="@Model.Season.SeasonId" class="btn">Add race</a>
            <a asp-action="Settings" asp-route-id="@Model.Season.SeasonId" class="btn"><i class="fas fa-cog"></i> Settings</a>
            <a asp-action="AddDefault" asp-route-id="@Model.Season.SeasonId" class="btn" data-toggle="tooltip" data-placement="top" title=@Constants.ToolTipDefaultSeasonBtn>
                <i class="fas fa-recycle"></i> Default
            </a>
        }
            <a asp-action="AddDrivers" asp-route-id="@Model.Season.SeasonId" class="btn">Add driver</a>
            <a asp-action="AddTeams" asp-route-id="@Model.Season.SeasonId" class="btn">Add team</a>
        </div>
    }
    else
    {
        <div class="btn-group">
            <a asp-action="PenaltyList" asp-route-id="@Model.Season.SeasonId" class="btn"><i class="fas fa-wrench"></i> Parts list</a>
            <a asp-action="QualifyingBattle" asp-route-seasonId="@Model.Season.SeasonId" class="btn"><i class="fas fa-signal"></i> Qualy battles</a>
        </div>
    }
    @if (Model.Season.State == SeasonState.Progress)
    {
        <div class="btn-group">
            <a asp-action="AddDrivers" asp-route-id="@Model.Season.SeasonId" class="btn">Add driver</a>
            <a asp-action="Finish" asp-route-id="@Model.Season.SeasonId" class="btn">End season</a>
        </div>
    }
    </div>

    <div class="mb-2">
        <h3 class="float-left">Drivers</h3>
        <table class="ctable fullborder fullwidth">
            <thead class="fullborder">
                <tr>
                    <th>#</th>
                    <th>Points</th>
                    <th style="width: 30px;">Nr.</th>
                    <th>Driver</th>
                    <th>Skill</th>
                    <th>Reliability</th>
                @if (Model.Season.State == SeasonState.Progress && isAdmin || Model.Season.State == SeasonState.Draft && isAdmin)
                {
                    <th>Edit</th>
                    <th>Drop</th>
                }
                </tr>
            </thead>
            <tbody class="table-counter">
            @foreach (var driver in Model.SeasonDrivers.OrderByDescending(d => d.Points).ToList())
            {
                <tr>
                    <td><b class="table-count"></b></td>
                    <td>@driver.Points</td>
                    <td style="width: 30px;">
                        <span class="badge badge-team" 
                              style="width:25px;background-color:@(driver.SeasonTeam.Colour);color:@(driver.SeasonTeam.Accent);border-color:@(driver.SeasonTeam.Accent);">
                            @driver.Driver.DriverNumber
                        </span>
                    </td>
                    <td>
                        <span class="badge badge-team fullwidth text-left font-size-default" 
                              style="background-color:@(driver.SeasonTeam.Colour);color:@(driver.SeasonTeam.Accent);border-color:@(driver.SeasonTeam.Accent);">
                            <span class="flag flag-@(driver.Driver.Country) ff-sm flag-margin"></span>@driver.Driver.Name
                        </span>
                    </td>
                    <td>@driver.Skill</td>
                    <td>@driver.Reliability</td>
                @if (Model.Season.State == SeasonState.Progress && isAdmin || Model.Season.State == SeasonState.Draft && isAdmin)
                {
                    <td>
                        <a asp-action="UpdateDriver" asp-route-id="@Model.Season.SeasonId" asp-route-driverId="@driver.SeasonDriverId">
                            <i class="fas fa-wrench fa-2x"></i>
                        </a>
                    </td>
                @if (driver.Dropped)
                {
                    <td class="dropped_driver_row">
                        <i class="fas fa-times fa-2x" data-toggle="tooltip" data-placement="top" title=@Constants.ToolTipDropDriverBtn></i>
                    </td>
                }
                else
                {
                    <td>
                        <a asp-action="DropDriverFromTeam" asp-route-seasonId="@Model.Season.SeasonId" asp-route-driverId="@driver.SeasonDriverId">
                            <i class="far fa-times-circle fa-2x"></i>
                        </a>
                    </td>
                }
                }
                </tr>
            }
            </tbody>
        </table>
    @if (Model.Season.State == SeasonState.Progress && isAdmin)
    {
        <div class="flex-row">
            <a asp-action="DriverDev" asp-route-id="@Model.Season.SeasonId" class="btn col-6">Driver development</a>
            <a asp-action="DriverReliabilityDev" asp-route-id="@Model.Season.SeasonId" class="btn col-6">Reliability</a>
        </div>
    }
    </div>

    <div class="mb-2">
        <h3 class="float-left">Races</h3>
        <table id="races" class="ctable fullborder fullwidth">
            <thead class="fullborder">
                <tr>
                    <th data-field="location" class="text-left pl-25">Location</th>
                    <th data-field="name">Name</th>
                    <th data-field="round">Round</th>
                    <th data-field="specification">Spec</th>
                    <th>Race</th>
                @if (Model.Season.State == SeasonState.Draft && isAdmin)
                {
                    <th></th>
                    <th></th>
                }
                </tr>
            </thead>
            <tbody>
            @foreach (var race in Model.Season.Races.OrderBy(r => r.Round))
            {
                <tr data-obj-id="@race.RaceId">
                    <td data-field="location" class="text-left">
                        <span class="flag flag-@(race.Track.Country) ff-sm flag-margin ml-cel"></span>@race.Track.Location
                    </td>
                    <td data-field="name">@race.Name</td>
                    <td data-field="round">@race.Round</td>
                    <td data-field="specification">@race.Track.Specification</td>
                    <td>
                        <a asp-controller="Races" asp-action="RacePreview" asp-route-id="@Model.Season.SeasonId" asp-route-raceId="@race.RaceId">
                            <i class="fas @(race.RaceState == RaceState.Finished ? "fa-search" : "fa-flag-checkered") fa-2x"></i>
                        </a>
                    </td>
                @if (Model.Season.State == SeasonState.Draft && isAdmin)
                {
                    <td>
                        <a class="cursor-pointer" onclick="moveRound(@Model.Season.SeasonId, @race.RaceId, -1)"><i class="fas fa-chevron-up fa"></i></a>
                        <a class="cursor-pointer" onclick="moveRound(@Model.Season.SeasonId, @race.RaceId, 1)"><i class="fas fa-chevron-down fa"></i></a>
                    </td>
                    <td>
                        <a asp-action="RemoveRace" asp-route-id="@race.RaceId" asp-route-seasonId="@Model.Season.SeasonId">
                            <i class="fas fa-trash-alt fa-2x"></i>
                        </a>
                    </td>
                }
                </tr>
            }
            </tbody>
        </table>
    </div>

    <div class="mb-2">
        <h3 class="float-left">Teams</h3>
        <table class="ctable fullborder fullwidth">
            <thead class="fullborder">
                <tr>
                    <th>#</th>
                    <th>Points</th>
                    <th>Team</th>
                    <th class="tcc-crew"><span>Chassis</span></th>
                    <th>Reliability</th>
                    <th class="tcc-chassis"><span>Engine</span></th>
                    <th>Power</th>
                @if (Model.Season.State == SeasonState.Progress && isAdmin || Model.Season.State == SeasonState.Draft && isAdmin)
                {
                    <th>Edit</th>
                }
                </tr>
            </thead>
            <tbody class="table-counter">
            @foreach (var team in Model.SeasonTeams.OrderByDescending(t => t.Points).ToList())
            {
                <tr>
                    <td><b class="table-count"></b></td>
                    <td>@team.Points</td>
                    <td>
                        <span class="badge badge-team text-left fullwidth" style="background-color:@(team.Colour);color:@(team.Accent);border-color:@(team.Accent);font-size:1rem;">
                            <span class="flag flag-@(team.Team.Country) ff-sm flag-margin"></span>@team.Name
                        </span>
                    </td>
                    <td>@team.Chassis</td>
                    <td>@team.Reliability</td>
                    <td>@team.Engine.Name</td>
                    <td>@team.Engine.Power</td>
                @if (Model.Season.State == SeasonState.Progress && isAdmin || Model.Season.State == SeasonState.Draft && isAdmin)
                {
                    <td>
                        <a asp-action="UpdateTeam" asp-route-id="@Model.Season.SeasonId" asp-route-teamId="@team.SeasonTeamId">
                            <i class="fas fa-wrench fa-2x"></i>
                        </a>
                    </td>
                }
                </tr>
            }
            </tbody>
        </table>
        @if (Model.Season.State == SeasonState.Progress && isAdmin)
        {
        <div class="flex-row">
            <a asp-action="TeamDev" asp-route-id="@Model.Season.SeasonId" class="btn col-4">Chassis development</a>
            <a asp-action="EngineDev" asp-route-id="@Model.Season.SeasonId" class="btn col-4">Engine development</a>
            <a asp-action="TeamReliabilityDev" asp-route-id="@Model.Season.SeasonId" class="btn col-4">Reliability</a>
        </div>
        }
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        $(".tire:contains('H')").css("background-color", "darkorange");
        $(".tire:contains('S')").css("background-color", "darkred");
        $(".dropped_driver_row").parent().css("background-color", "#480000");
    });

    function updateRaces(races) {
        const table = document.querySelector('#races');
        const tableBody = table.querySelector("tbody");

        races.forEach((race) => {
            let row = tableBody.querySelector(`tr[data-obj-id='${race.raceId}']`);
            row.querySelector("td[data-field='round']").innerHTML = race.round;
        });

        let th = table.querySelector("th[data-field='round']")
        let tableRows = tableBody.querySelectorAll("tr:nth-child(n+1)")
        Array.from(tableRows)
            .sort(tableComparer(Array.from(th.parentNode.children).indexOf(th), true))
            .forEach(tr => table.querySelector("tbody").appendChild(tr));
    }

    function handleError(errorData) {
        alert(errorData.message);
    }

    function moveRound(season, race, direction) {
        fetch(`/Season/${season}/Races/${race}/round?direction=${direction}`, { method: "POST" })
            .then(response => response.status == 200 ? Promise.resolve(response) : Promise.reject(response))
            .then(response => response.json())
            .then(data => updateRaces(data))
            .catch(err => err.json().then(err => handleError(err)));
    }
</script>