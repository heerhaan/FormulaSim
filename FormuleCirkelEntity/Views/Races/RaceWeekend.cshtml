@model FormuleCirkelEntity.ViewModels.RaceWeekendModel

@{
    ViewData["Title"] = "RaceWeekend";
    List<Driver> userOwned = ViewBag.owneddrivers;
    bool isAdmin = this.User.IsInRole(Constants.RoleAdmin);
}

<div class="d-inline-block">
    <div id="graphic">
        <h1>@Model.Year @Model.Race.Name Grand Prix</h1>
        <table class="ctable fullborder fullwidth">
            <thead class="fullborder">
                <tr>
                    <th class="fullborder">#</th>
                    <th class="fullborder">No</th>
                    <th class="fullborder">Driver</th>
                    <th class="fullborder">Team</th>
                    <th class="fullborder">Tyre</th>
                    <th class="fullborder">Penalty</th>
                    <th class="fullborder">Driver traits</th>
                    <th class="fullborder">Team traits</th>
                    <th class="fullborder">Strategy</th>
                    <th class="fullborder">Change</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var driver in Model.DriverResults.OrderBy(dr => dr.Grid).ToList())
                {
                    <tr>
                        <td><b class="alt-font">@driver.Grid</b></td>
                        <td>
                            <span class="custom-badge badge-team fullwidth"
                                  style="background-color:@(driver.SeasonDriver.SeasonTeam.Colour);color:@(driver.SeasonDriver.SeasonTeam.Accent);border-color:@(driver.SeasonDriver.SeasonTeam.Accent);">
                                @driver.SeasonDriver.Driver.DriverNumber
                            </span>
                        </td>
                        <td class="text-left"><span class="ml-cel"><span class="flag flag-@(driver.SeasonDriver.Driver.Country) ff-sm flag-margin"></span>@driver.SeasonDriver.Driver.Name</span></td>
                        <td>
                            <span class="custom-badge badge-team text-left fullwidth"
                                  style="background-color:@(driver.SeasonDriver.SeasonTeam.Colour);color:@(driver.SeasonDriver.SeasonTeam.Accent);border-color:@(driver.SeasonDriver.SeasonTeam.Accent);">
                                <span class="flag flag-@(driver.SeasonDriver.SeasonTeam.Team.Country) ff-sm flag-margin"></span>@driver.SeasonDriver.SeasonTeam.Name
                            </span>
                        </td>
                        <td>
                            <span class="custom-badge badge-team fullwidth"
                                  style="background-color:@(driver.SeasonDriver.SeasonTeam.Rubber.Colour);color:@(driver.SeasonDriver.SeasonTeam.Rubber.Accent);border-color:@(driver.SeasonDriver.SeasonTeam.Rubber.Accent);">
                                @(driver.SeasonDriver.SeasonTeam.Rubber.Name.Substring(0,1).ToUpper())
                            </span>
                        </td>
                        @if (driver.PenaltyReason == null)
                        {
                            <td></td>
                        }
                        else
                        {
                            <td><span class="custom-badge badge-dsq fullwidth">@(driver.PenaltyReason)</span></td>
                        }
                        <td>
                            @foreach (var trait in driver.SeasonDriver.Driver.DriverTraits)
                            {
                                <b class="alt-font small">[@trait.Trait.Name]</b>
                            }
                        </td>
                        <td>
                            @foreach (var trait in driver.SeasonDriver.SeasonTeam.Team.TeamTraits)
                            {
                                <b class="alt-font small">[@trait.Trait.Name]</b>
                            }
                        </td>
                        <td>
                            @foreach (var strat in driver.Strategy.Tyres)
                            {
                                <span class="custom-badge" style="background-color:@(strat.Tyre.TyreColour);">
                                    @(strat.Tyre.TyreName.Substring(0, 1).ToUpper())
                                </span>
                            }
                        </td>
                        <td>
                            @if (userOwned.Contains(driver.SeasonDriver.Driver) || isAdmin)
                            {
                                <a asp-action="ChangeStrategy" asp-route-driverId="@driver.DriverResultId" asp-route-raceId="@Model.Race.RaceId" class="btn btn-sm">Strategy</a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="flex-row mb-1">
        @if (Model.Race.RaceState == RaceState.Race || Model.Race.RaceState == RaceState.Finished || Model.Race.Season.State == SeasonState.Finished)
        {
            <a asp-action="Race" asp-route-id="@Model.Race.SeasonId" asp-route-raceId="@Model.Race.RaceId" class="btn fullborder w-25">Race</a>
        } else if (Model.Race.RaceState == RaceState.Concept || Model.Race.RaceState == RaceState.Qualifying)
        {
            <a asp-action="Qualifying" asp-route-id="@Model.Race.SeasonId" asp-route-raceId="@Model.Race.RaceId" class="btn fullborder w-25">Qualifying</a>
        }
        <button class="btn ml-auto" onclick="takeScreenshot('#graphic', '#screenshot')" data-toggle="tooltip" data-placement="right" title="@Constants.ToolTipImageBtn">
            <i class="fas fa-image fa-2x"></i>
        </button>
    </div>

    <div id="screenshot"></div>
</div>
