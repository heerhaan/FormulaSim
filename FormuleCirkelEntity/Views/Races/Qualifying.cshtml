@model IEnumerable<FormuleCirkelEntity.Models.Qualification>

@{
    ViewData["Title"] = "Qualification";
    var race = ViewBag.race;
}

<div class="d-inline-block w-75 mb-1">
    <h1>Qualifying in @(race.Name)</h1>

    <div class="float-right">
        <input id="two-run-check" type="checkbox" name="tworun" style="margin-right:5px; transform:scale(2);" />
        <label for="two-run-check">2-run</label>
    </div>

    <nav>
        <div class="nav nav-tabs" id="nav-tab" role="tablist">
            <a class="nav-item nav-link active" id="nav-q1-tab" data-toggle="tab" href="#nav-q1" role="tab" aria-controls="nav-q1" aria-selected="true">Q1</a>
            <a class="nav-item nav-link" id="nav-q2-tab" data-toggle="tab" href="#nav-q2" role="tab" aria-controls="nav-q2" aria-selected="true">Q2</a>
            <a class="nav-item nav-link" id="nav-q3-tab" data-toggle="tab" href="#nav-q3" role="tab" aria-controls="nav-q3" aria-selected="true">Q3</a>
        </div>
    </nav>

    <div class="tab-content" id="nav-tabContent">
        <div class="tab-pane fade show active" id="nav-q1" role="tabpanel" aria-labelledby="nav-q1-tab">
            <table id="graphic1" class="ctable fullborder fullwidth">
                <thead class="fullborder">
                    <tr>
                        <th>#</th>
                        <th class="text-left">Driver</th>
                        <th>Team</th>
                        <th>Q1</th>
                        <th>Gap</th>
                    </tr>
                </thead>
                <tbody id="q1table"></tbody>
            </table>
            <button class="btn float-right" onclick="takeScreenshot('#graphic1', '.screenshot')"><i class="fas fa-image fa-2x"></i></button>
        </div>
        <div class="tab-pane fade" id="nav-q2" role="tabpanel" aria-labelledby="nav-q2-tab">
            <table id="graphic2" class="ctable fullborder fullwidth">
                <thead class="fullborder">
                    <tr>
                        <th>#</th>
                        <th class="text-left">Driver</th>
                        <th>Team</th>
                        <th>Q2</th>
                        <th>Gap</th>
                    </tr>
                </thead>
                <tbody id="q2table"></tbody>
            </table>
            <button class="btn float-right" onclick="takeScreenshot('#graphic2', '.screenshot')"><i class="fas fa-image fa-2x"></i></button>
        </div>
        <div class="tab-pane fade" id="nav-q3" role="tabpanel" aria-labelledby="nav-q3-tab">
            <table id="graphic3" class="ctable fullborder fullwidth">
                <thead class="fullborder">
                    <tr>
                        <th>#</th>
                        <th class="text-left">Driver</th>
                        <th>Team</th>
                        <th>Q3</th>
                        <th>Gap</th>
                    </tr>
                </thead>
                <tbody id="q3table"></tbody>
            </table>
            <button class="btn float-right" onclick="takeScreenshot('#graphic3', '.screenshot')"><i class="fas fa-image fa-2x"></i></button>
        </div>
    </div>

    <button id="generateq1" class="btn float-left w-25">Start Q1!</button>
    <button id="generateq2" class="btn float-left w-25">Start Q2!</button>
    <button id="generateq3" class="btn float-left w-25">Start Q3!</button>

    <form asp-action="Return" asp-route-seasonId="@(race.SeasonId)" asp-route-raceId="@(race.RaceId)" id="return">
        <div class="form-group">
            <input type="submit" value="Finish!" class="btn float-left w-25" />
        </div>
    </form>

    <div class="screenshot"></div>
</div>

<script>
    var leaderapplied = false;
    $(document).ready(function () {
        var secondRun = false;
        var tworun = $("#two-run-check");
        $("#generateq2").hide();
        $("#generateq3").hide();
        $("#return").hide();
        $('#generateq1').click(function () {
            $.ajax({
                url: "Qualifying/Update",
                type: "GET",
                data: {
                    source: "Q1",
                    secondRun
                },
                success: function (drivers) {
                    console.log(drivers);
                    if (secondRun) {
                        $("#q1table").empty();
                    }
                    let leaderscore = drivers.find(fastestTime);
                    leaderapplied = false;
                    $.each(drivers, function (index, driver) {
                        let gap = calculateGap(leaderscore.score, driver.score);
                        if (driver.position > @ViewBag.season.QualificationRemainingDriversQ2) {
                            var row = rowString(driver.position, driver.colour, driver.accent, driver.teamName, driver.driverName, driver.score, gap, true);
                            $("#q1table").append(row);
                        } else {
                            var row = rowString(driver.position, driver.colour, driver.accent, driver.teamName, driver.driverName, driver.score, gap, false);
                            $("#q1table").append(row);
                        }
                    });
                    $('#screenshot').empty();
                    if (secondRun || tworun.is(":not(:checked)")) {
                        $("#generateq1").hide();
                        $("#generateq2").show();
                        secondRun = false;
                    } else {
                        secondRun = true;
                    }
                }
            });
        });
        $('#generateq2').click(function () {
            $.ajax({
                url: "Qualifying/Update",
                type: "GET",
                data: {
                    source: "Q2",
                    secondRun
                },
                success: function (drivers) {
                    if (secondRun) {
                        $("#q2table").empty();
                    }
                    let leaderscore = drivers.find(fastestTime);
                    leaderapplied = false;
                    $.each(drivers, function (index, driver) {
                        let gap = calculateGap(leaderscore.score, driver.score);
                        if (driver.position > @ViewBag.season.QualificationRemainingDriversQ3) {
                            var row = rowString(driver.position, driver.colour, driver.accent, driver.teamName, driver.driverName, driver.score, gap, true);
                            $("#q2table").append(row);
                        } else {
                            var row = rowString(driver.position, driver.colour, driver.accent, driver.teamName, driver.driverName, driver.score, gap, false);
                            $("#q2table").append(row);
                        }
                    });
                    $('#screenshot').empty();
                    if (secondRun || tworun.is(":not(:checked)")) {
                        $("#generateq2").hide();
                        $("#generateq3").show();
                        secondRun = false;
                    } else {
                        secondRun = true;
                    }
                }
            });
        });
        $('#generateq3').click(function () {
            $.ajax({
                url: "Qualifying/Update",
                type: "GET",
                data: {
                    source: "Q3",
                    secondRun
                },
                success: function (drivers) {
                    if (secondRun) {
                        $("#q3table").empty();
                    }
                    let leaderscore = drivers.find(fastestTime);
                    leaderapplied = false;
                    $.each(drivers, function (index, driver) {
                        let gap = calculateGap(leaderscore.score, driver.score);
                        var row = rowString(driver.position, driver.colour, driver.accent, driver.teamName, driver.driverName, driver.score, gap, false);
                        $("#q3table").append(row);
                    });
                    $('#screenshot').empty();
                    if (secondRun || tworun.is(":not(:checked)")) {
                        $("#generateq3").hide();
                        $("#return").show();
                        secondRun = false;
                    } else {
                        secondRun = true;
                    }
                }
            });
        });
    });

    function rowString(position, colour, accent, team, driver, score, gap, dangerzone) {
        if (dangerzone) {
            var retString = "<tr><td><span class='badge result-dnf fullwidth font-size-default'>" + position
                + "</span></td><td class='text-left'><span class='ml-cel'>" + driver + "</span></td><td><span class='badge badge-team fullwidth font-size-default' style='background-color:"
                + colour + ";color:" + accent + ";border-color:" + accent + ";'>" + team + "</span></td><td>" + score + "</td><td>" + gap + "</td></tr>";

            return retString;
        }
        else {
            var retString = "<tr><td class='alt-font'>" + position + "</td><td class='text-left'><span class='ml-cel'>" + driver
                + "</span></td><td><span class='badge badge-team fullwidth font-size-default' style='background-color:"
                + colour + ";color:" + accent + ";border-color:" + accent + ";'>" + team + "</span></td><td>" + score + "</td><td>" + gap + "</td></tr>";

            return retString;
        }
    }

    function fastestTime(driverResult) {
        return driverResult.position == 1;
    }

    function calculateGap(leader, driver) {
        let gap = "+" + ((leader - driver) * 0.08).toFixed(2);
        if (gap === "+0.00" && leaderapplied === false) {
            gap = "Leader";
            leaderapplied = true;
        }
        return gap;
    }
</script>