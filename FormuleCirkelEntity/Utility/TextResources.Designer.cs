//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FormuleCirkelEntity.Utility {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class TextResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TextResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FormuleCirkelEntity.Utility.TextResources", typeof(TextResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To add driver back to the season, just make any modification to them.
        /// </summary>
        public static string TooltipDropDriverButton {
            get {
                return ResourceManager.GetString("TooltipDropDriverButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By clicking this button the table above gets copied and posted underneath as an image.
        /// </summary>
        public static string TooltipImageButton {
            get {
                return ResourceManager.GetString("TooltipImageButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press the cog wheel to modify the stints and what happens each stint.
        /// </summary>
        public static string TooltipModifyRaceButton {
            get {
                return ResourceManager.GetString("TooltipModifyRaceButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default returns the same season setup and races as the previous season.
        /// </summary>
        public static string TooltipSeasonDefaultButton {
            get {
                return ResourceManager.GetString("TooltipSeasonDefaultButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RNG for this roll is between 90 and 98.
        /// </summary>
        public static string TooltipSeasonDriverRandomReliabilityRoll {
            get {
                return ResourceManager.GetString("TooltipSeasonDriverRandomReliabilityRoll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First drivers swaps positions with their second driver if one position behind. Also gives +2/-2 to chassis.
        /// </summary>
        public static string TooltipSeasonDriverTeamStatus {
            get {
                return ResourceManager.GetString("TooltipSeasonDriverTeamStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The highest possible value for a pitstop, has to be more than the minimum pitstop value and should also be a negative value.
        /// </summary>
        public static string ToolTipSeasonSettingsPitMax {
            get {
                return ResourceManager.GetString("ToolTipSeasonSettingsPitMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The lowest possible value for a pitstop, has to be less than the maximum pitstop value and should also be a negative value.
        /// </summary>
        public static string ToolTipSeasonSettingsPitMin {
            get {
                return ResourceManager.GetString("ToolTipSeasonSettingsPitMin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How many points are given for qualifying in 1st position.
        /// </summary>
        public static string ToolTipSeasonSettingsPolePoints {
            get {
                return ResourceManager.GetString("ToolTipSeasonSettingsPolePoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How many bonus points each position on the starting grid gets over the last qualified driver.
        /// </summary>
        public static string ToolTipSeasonSettingsQualyBonus {
            get {
                return ResourceManager.GetString("ToolTipSeasonSettingsQualyBonus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of drivers that get to participate in the 2nd qualifying session.
        /// </summary>
        public static string ToolTipSeasonSettingsQualyQ2 {
            get {
                return ResourceManager.GetString("ToolTipSeasonSettingsQualyQ2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of drivers that get to participate in the 3rd qualifying session.
        /// </summary>
        public static string ToolTipSeasonSettingsQualyQ3 {
            get {
                return ResourceManager.GetString("ToolTipSeasonSettingsQualyQ3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum RNG value that can be achieved during the qualifications with the lower value being 0.
        /// </summary>
        public static string ToolTipSeasonSettingsQualyRng {
            get {
                return ResourceManager.GetString("ToolTipSeasonSettingsQualyRng", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Represents the year this season takes place in.
        /// </summary>
        public static string ToolTipSeasonSettingsYear {
            get {
                return ResourceManager.GetString("ToolTipSeasonSettingsYear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applies the skill of the driver plus the style bonus.
        /// </summary>
        public static string TooltipStintEventDriverSkill {
            get {
                return ResourceManager.GetString("TooltipStintEventDriverSkill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applies the power of the engine.
        /// </summary>
        public static string TooltipStintEventEnginePower {
            get {
                return ResourceManager.GetString("TooltipStintEventEnginePower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lowest possible RNG for a stint.
        /// </summary>
        public static string TooltipStintEventLowerRng {
            get {
                return ResourceManager.GetString("TooltipStintEventLowerRng", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applies the bonus the qualifying position gives.
        /// </summary>
        public static string TooltipStintEventQualyBonus {
            get {
                return ResourceManager.GetString("TooltipStintEventQualyBonus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Two rolls between [0 to 100] for the driver and chassis reliability, if any roll is higher than the reliability value then the driver DNFs.
        /// </summary>
        public static string TooltipStintEventReliability {
            get {
                return ResourceManager.GetString("TooltipStintEventReliability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applies the chassis of the team plus various bonusses, like specification.
        /// </summary>
        public static string TooltipStintEventTeamChassis {
            get {
                return ResourceManager.GetString("TooltipStintEventTeamChassis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gives solid +10 to drivers with soft tires.
        /// </summary>
        public static string TooltipStintEventTyreBonus {
            get {
                return ResourceManager.GetString("TooltipStintEventTyreBonus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RNG of [-20 to 0] for drivers with soft tires.
        /// </summary>
        public static string TooltipStintEventTyreWear {
            get {
                return ResourceManager.GetString("TooltipStintEventTyreWear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Highest possible RNG for a stint.
        /// </summary>
        public static string TooltipStintEventUpperRng {
            get {
                return ResourceManager.GetString("TooltipStintEventUpperRng", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Every reliability roll will be between 0 and 100. If the roll is higher than the drivers reliablity value then it causes a DNF.
        /// </summary>
        public static string ToolTipTeamReliability {
            get {
                return ResourceManager.GetString("ToolTipTeamReliability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specific values that get added to the chassis when the track matches the specification.
        /// </summary>
        public static string ToolTipTeamSpecification {
            get {
                return ResourceManager.GetString("ToolTipTeamSpecification", resourceCulture);
            }
        }
    }
}
